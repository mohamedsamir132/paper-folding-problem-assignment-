# [Problem 1] Implementation using exponentiation arithmetic operators

THICKNESS = 0.00008
folded_thickness = THICKNESS * 2 ** 43
print("Thickness: {} meters".format(folded_thickness))

 # [Problem 2] Unit Conversion

print("thickness : {:.2f} kilometrs".format(folded_thickness/10000))

# [Problem 3] Create using a for statement

thickness_list=[0.0008]
for i in range (43):
    thickness_list.append(thickness_list[-1]*2)
    print (thickness_list[-1])
    
# [Problem 4] Comparison of calculation time

import time
start = time.time()
thickness = 0.000008
folded_thickness = thickness * 2 ** 43
print("thickness {} meters".format(folded_thickness))
elapsed_time = time.time() - start
print("time : {}[s]".format(elapsed_time))

import time
start = time.time()
thickness_list=[0.0008]
for i in range (43):
    thickness_list.append(thickness_list[-1]*2)
    print (thickness_list[-1])
elapsed_time = time.time() - start
print("time : {}[s]".format(elapsed_time))

# [Problem 5] Saving to a list

thickness_list=[0.0008]
for i in range (43):
    thickness_list.append(thickness_list[-1]*2)
print (thickness_list[-1])

# [Problem 6] Displaying a line graph

iimport matplotlib.pyplot as plt
%matplotlib inline
plt.title("thickness of folded paper")
plt.xlabel("number of folds")
plt.ylabel("thickness [m]")
plt.plot(thickness_list)  
plt.show()

[Problem 7] Customizing graphs

plt.title("thickness of folded paper")
plt.xlabel("number of folds")
plt.ylabel("thickness [m]")
plt.plot(thickness_list, color='red')
plt.show()



